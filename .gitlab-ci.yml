# Code Quality
include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  inherit:
    default: false
  artifacts:
    paths: [gl-code-quality-report.json]
  allow_failure: true

# Script testing
default:
  image: registry.gitlab.com/luigi311/encoders-docker:latest
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    # Install Dependencies
    - apt-get update && apt-get install -y parallel time gawk jq python3 python3-pip python-is-python3
    - pip3 install numpy
    # Grab first two arguments to test only
    - mv arguments/arguments_aomenc arguments/arguments_temp
    - head -n 2 arguments/arguments_temp > arguments/arguments_aomenc
    - mv arguments/arguments_x265 arguments/arguments_temp
    - head -n 2 arguments/arguments_temp > arguments/arguments_x265
    - mv arguments/arguments_svt-av1 arguments/arguments_temp
    - head -n 2 arguments/arguments_temp > arguments/arguments_svt-av1
    # Download test videos from SVT-AV1
    - for url in raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master randomderp.com; do curl -LO https://$url/video.tar.gz && break; done 
    - tar xf video.tar.gz

.validate:
  script: &validate |
    cat stats.csv
    if [ "$(grep -c '^,\|,,\|,$' stats.csv)" -ge 1 ]; then exit 1; fi

    if [ "$BDRATE" -eq 1 ]; then
      cat stats_bd_rates.csv
      if [ "$(grep -c '^,\|,,\|,$' stats_bd_rates.csv)" -ge 1 ]; then exit 1; fi
    fi

.tester:
  script: &tester |
    if [ "$SIMPLE" -eq 1 ]; then
      ./run.sh --input bus_cif.y4m --output output --csv stats.csv --enc ${ENCODER}
    else
      BASE="./run.sh --input bus_cif.y4m --output output --csv stats.csv --encworkers 2 --metricworkers 1 --flags arguments/arguments_${ENCODER} --threads 2 --q --preset 6 --enc ${ENCODER}"

      if [ "$BDRATE" -eq 1 ]; then
        QUALITY="--bd steps/steps_${ENCODER}"
      else
        QUALITY="--quality 40"
      fi

      $BASE $QUALITY
    fi

    validate

stages:
  - test

validation-aomenc:
  variables:
    ENCODER: "aomenc"
  extends: .tester

bd_rate-aomenc:
  variables:
    ENCODER: "aomenc"
    BDRATE: 1
  extends: .tester
  
simple-aomenc:
  variables:
    ENCODER: "aomenc"
    SIMPLE: 1
  extends: .tester

validation-svt-av1:
  variables:
    ENCODER: "svt-av1"
  extends: .tester

bd_rate-svt-av1:
  variables:
    ENCODER: "svt-av1"
    BDRATE: 1
  extends: .tester
  
simple-svt-av1:
  variables:
    ENCODER: "svt-av1"
    SIMPLE: 1
  extends: .tester

validation-x265:
  variables:
    ENCODER: "x265"
  extends: .tester

bd_rate-x265:
  variables:
    ENCODER: "x265"
    BDRATE: 1
  extends: .tester
  
simple-x265:
  variables:
    ENCODER: "x265"
    SIMPLE: 1
  extends: .tester
